// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id                 String   @id @default(cuid())
  email              String   @unique
  name               String?
  passwordHash       String?
  preferredCurrency  String   @default("USD")
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt

  // Relationships
  transactions       Transaction[]
  budgets            Budget[]
  categories         Category[]
  goals              Goal[]
  investments        Investment[]
}

model Category {
  id          String   @id @default(cuid())
  name        String
  type        CategoryType
  icon        String?
  color       String?
  userId      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relationships
  user        User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  transactions Transaction[]
  budgets      Budget[]
}

model Transaction {
  id          String        @id @default(cuid())
  amount      Float
  currency    String        @default("USD")
  description String?
  date        DateTime      @default(now())
  type        TransactionType
  recurring   Boolean       @default(false)
  frequency   String?       // "daily", "weekly", "monthly", "yearly"
  categoryId  String?
  userId      String
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt

  // Relationships
  user        User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  category    Category?     @relation(fields: [categoryId], references: [id])
}

model Budget {
  id          String        @id @default(cuid())
  name        String
  amount      Float
  currency    String        @default("USD")
  period      BudgetPeriod
  startDate   DateTime
  endDate     DateTime
  categoryId  String?
  userId      String
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt

  // Relationships
  user        User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  category    Category?     @relation(fields: [categoryId], references: [id])
}

model Goal {
  id            String   @id @default(cuid())
  name          String
  targetAmount  Float
  currentAmount Float    @default(0)
  currency      String   @default("USD")
  deadline      DateTime?
  userId        String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  // Relationships
  user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Investment {
  id             String           @id @default(cuid())
  assetType      InvestmentType
  assetName      String
  quantity       Float
  purchasePrice  Float
  currentPrice   Float?
  purchaseDate   DateTime
  userId         String
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt

  // Relationships
  user           User             @relation(fields: [userId], references: [id], onDelete: Cascade)
}

// Enums
enum CategoryType {
  INCOME
  EXPENSE
}

enum TransactionType {
  INCOME
  EXPENSE
}

enum BudgetPeriod {
  MONTHLY
  ANNUAL
}

enum InvestmentType {
  STOCK
  CRYPTO
  MUTUAL_FUND
  BOND
  REAL_ESTATE
  OTHER
}